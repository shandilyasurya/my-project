📘 Learnings from the Experiment:
---------------------------------
1. Understood how to create a responsive and accessible HTML form.
2. Learned how to use basic HTML5 form elements: <label>, <input>, <button>, etc.
3. Gained practical experience with form validations using required, minlength, maxlength, min, and max attributes.
4. Applied CSS to improve the visual presentation of the form using properties like padding, border-radius, font-family, and background colors.
5. Learned the concept of box-model and how padding and margin affect layout.
6. Understood the importance of linking <label> to input using 'for' and 'id' attributes.
7. Practiced how to center a form using CSS Flexbox.
8. Explored how to use the :hover pseudo-class for interactive button styling.
9. Learned how to enhance user experience with placeholders and input constraints.
10. Realized the benefit of separating HTML structure and CSS styling.

🧪 Test Cases / Scenarios Covered:
----------------------------------
1. Submitting form with empty fields – blocked due to 'required'.
2. Entering a name with less than 2 characters – blocked due to 'minlength'.
3. Entering a name longer than 50 characters – blocked due to 'maxlength'.
4. Invalid email format (e.g., "abc.com") – blocked due to 'type=email'.
5. Age less than 10 or more than 100 – blocked due to 'min' and 'max'.
6. All valid inputs – form submits successfully.
7. Button hover effect tested for UI feedback.

🎨 CSS Explanation:
-------------------
1. font-family: Sets the font style of the whole page (Arial).
2. background: Light background applied to the body and white background to the form for clean contrast.
3. padding: Creates inner space inside elements like inputs and the form box for neat spacing.
4. border-radius: Rounds the corners of input fields and buttons for a soft, modern look.
5. box-shadow: Adds a subtle shadow around the form container to make it pop from the background.
6. width: Fixed width for the form container to keep layout consistent.
7. text-align: center: Centers the heading.
8. hover on button: Adds interactivity with a darker shade on hover.
9. flexbox on body: Used to center the form both vertically and horizontally.

🛠️ Additional Validation:
--------------------------
Added `pattern` attribute to the Name input to allow only alphabets and spaces:

Example:
<input type="text" id="name" name="name" required minlength="2" maxlength="50" pattern="[A-Za-z\s]+" placeholder="Enter your name">

This prevents users from entering numbers or special characters in the Name field.
